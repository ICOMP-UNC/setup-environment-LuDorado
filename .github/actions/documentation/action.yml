name: "Doc check"
description: "Code documentation generation with Doxygen"

runs:
  using: "composite"
  steps:
    - name: "Run doxygen command"
      shell: bash
      run: |
          # We only make check, not changes
          DOX_CONF_FILE=$(pwd)/Doxyfile

          # The *cat* line  prints the content of the Doxyfile
          # Then it prints INPUT and the paths for src, include and lib
          # Finally, it creates or overwrite the Doxyfile by replacing the INPUT line with the paths previously printed
          {
              cat $DOX_CONF_FILE
              echo "INPUT" = $(pwd)/src $(pwd)/include $(pwd)/lib
          } > $DOX_CONF_FILE

          # Generate documentation
          # Grpahviz command to  generates graphics
          sudo dot -c

          ERROR_FILE_FLAG=$(pwd)/dox_errors.txt

          # It saves the standard otput of the command *oxigen -s* in the env var *DOXYGEN_COMMAND* and in the file specified in *$ERROR_FILE_FLAG*
          DOXYGEN_COMMAND=$(doxygen -s $DOX_CONF_FILE) > $ERROR_FILE_FLAG

          # It checks if the errors' file  has a size higgher than 0 (if there are errors in the docs generation). If it's true it exits the execution with the error code, otherwise it finishes properly
          if [ -s $ERROR_FILE_FLAG ]; then
              echo "Error: There are some files that are not documented correctly"
              exit 1
          else
              echo "All files are documented correctly. Niiiceee"
              exit 0
          fi
    # Upload errors as an artifact, when failed
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: Doxygen errors!!!
        path: $(pwd)/dox_errors.txt
        retention-days: 1
